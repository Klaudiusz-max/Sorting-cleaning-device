from pytube import YouTube
import os
import shutil
import send2trash
import daemon
import time
import threading

def create_folders():
    desktop = '/home/klaudiusz/Desktop'
    folders = ['mp4', 'jpg', 'pdf', 'py']

    for folder_name in folders:
        folder_path = os.path.join(desktop, folder_name)

        if not os.path.exists(folder_path):
            os.makedirs(folder_path)
            print(f"Folder '{folder_path}' was created.")
        else:
            print(f"Folder '{folder_path}' already exists.")

def initialize():
    create_folders()
    youtube_url = "https://www.youtube.com/watch?v=0JQ0xnJyb0A"
    output_folder = "/home/klaudiusz/Desktop"

    # Pobierz film z YouTube
    download_youtube_video(youtube_url, output_folder)

    # Uruchom sortowanie jako demon
    run_sorting_daemon()

def download_youtube_video(video_url, output_path='.'):
    try:
        youtube_video = YouTube(video_url)
        video_stream = youtube_video.streams.filter(only_audio=True).first()
        video_stream.download(output_path)
        print(f"Audio downloaded successfully to {output_path}")
    except Exception as e:
        print(f"Error: {e}")

def sorting():
    desktop = '/home/klaudiusz/Desktop'

    mapping = {
        '.mp4': '/home/klaudiusz/Desktop/mp4',
        '.py': '/home/klaudiusz/Desktop/projekty',
        '.pdf': '/home/klaudiusz/Desktop/pdf',
        '.jpg': '/home/klaudiusz/Desktop/jpg',
        '.txt': '/home/klaudiusz/Desktop/txt',
    }

    for filename in os.listdir(desktop):
        source_file_path = os.path.join(desktop, filename)
        if os.path.isfile(source_file_path):
            file_extension = os.path.splitext(filename)[1]
            if file_extension in mapping:
                destination_directory = mapping[file_extension]
                if destination_directory.endswith("trash"):
                    send2trash.send2trash(source_file_path)
                    print(f"File {filename} has been moved to the trash.")
                else:
                    shutil.move(source_file_path, os.path.join(destination_directory, filename))
                    print(f"File {filename} has been moved to {destination_directory}/")

    for root, directories, files in os.walk(desktop, topdown=False):
        for directory in directories:
            dir_path = os.path.join(root, directory)
            if not os.listdir(dir_path):
                os.rmdir(dir_path)
                print(f"Folder {dir_path} has been deleted.")

def run_sorting_daemon():
    with daemon.DaemonContext():
        while True:
            sorting()
            time.sleep(60)

if __name__ == '__main__':
    initialize_thread = threading.Thread(target=initialize)
    initialize_thread.start()
    initialize_thread.join()  # Poczekaj, aż wątek zakończy działanie
